-- This is a highly simplified, aggressive script designed for immediate keycard pickup.
-- It executes the anti-kick TP sequence and repeatedly Invokes the server until pickup is confirmed.

local playersService = game:GetService("Players")
local workspace = game:GetService("Workspace")
local lplr = playersService.LocalPlayer

-- 1. Configuration & Remote Setup
local remote = workspace:WaitForChild("Remote", 10)
local itemHandler = remote and remote:WaitForChild("ItemHandler", 10)

if not itemHandler or not itemHandler:IsA("RemoteFunction") then 
    -- If remote fails, stop the script immediately.
    return
end

-- Function to find the Key card Model and the ITEMPICKUP instance
local function findPickupModelAndPart()
    -- Recursively find the Key card Model anywhere under Workspace
    local keycardModel = workspace:FindFirstChild("Key card", true)
    
    -- Find the ITEMPICKUP part, which is the required argument for InvokeServer
    local pickupPart = keycardModel and keycardModel:FindFirstChild("ITEMPICKUP")
    
    -- Return both the Model (for teleporting to) and the Part (for the InvokeServer argument)
    return keycardModel, pickupPart 
end

-- --- Main Execution Sequence ---
task.spawn(function()
    -- Wait for character and root part to be available
    local character = lplr.Character or lplr.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")
    
    local startCFrame = rootPart.CFrame

    -- Define TPs
    local tp1 = CFrame.new(814, 101, 2217)
    local tp2 = CFrame.new(820, 101, 2217)
    local tp3 = CFrame.new(-922, 94, 2052)
    local tp4 = CFrame.new(-924, 94, 2045) -- Final scanning position
    
    -- 1. EXECUTE INITIAL TELEPORT SEQUENCE
    
    rootPart.CFrame = tp1
    task.wait(0.35) 

    rootPart.CFrame = tp2
    task.wait(0.35) 

    rootPart.CFrame = tp3
    task.wait(0.65)

    rootPart.CFrame = tp4
    task.wait(0.35) 

    
    local keycardModel = nil
    local pickupPart = nil
    local waitStartTime = tick()

    -- 2. WAIT FOR THE ITEMPICKUP INSTANCE
    while not pickupPart and (tick() - waitStartTime < 60) do
        keycardModel, pickupPart = findPickupModelAndPart()
        task.wait(0.5) 
    end
    
    if not pickupPart then
        rootPart.CFrame = startCFrame
        return -- Item not found, return to start and exit.
    end
    
    -- 3. JUMP ON TOP ONCE (Old Logic Reinstated)
    -- Use the CFrame of the main Key card Model (or its primary part) for the hop.
    local hopPosition = keycardModel.PrimaryPart.CFrame * CFrame.new(0, 3, 0)
    
    rootPart.CFrame = hopPosition 
    task.wait(0.1) 

    
    -- 4. AGGRESSIVE INVOKE LOOP until Pickup Confirmed
    local loopStartTime = tick()
    
    -- Loop while the item still exists (and up to a maximum of 10 seconds)
    while findPickupModelAndPart() and (tick() - loopStartTime < 10) do
        
        -- Try to invoke the server with the ITEMPICKUP Instance
        pcall(function()
            itemHandler:InvokeServer(pickupPart) -- Pass the ITEMPICKUP Instance
        end)
        
        task.wait(0.1) -- The required cooldown between calls
    end
    
    -- 5. FINAL TELEPORT AND CLEANUP
    rootPart.CFrame = tp4
    task.wait(0.1)
    rootPart.CFrame = startCFrame
    
end)
